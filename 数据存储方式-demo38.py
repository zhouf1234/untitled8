# 一、文件存储
#
# 1.TXT文本存储
# 将数据保存到TXT文本的操作非常简单，而且TXT文本几乎兼容任何平台，缺点是不利于检索。
# 所以针对检索和数据结构要求不高，追求方便第一的话，可以采用TXT文本存储。
# 利用到的方法 requests pyquery解析库解析。

# 2 文件打开方式
# 文件打开的几种访问模式
# 访问模式	说明
# r	以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。
# w	打开一个文件只用于写入。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。
# a	打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。
# rb	以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。这是默认模式。
# wb	以二进制格式打开一个文件只用于写入。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。
# ab	以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。
# r+	打开一个文件用于读写。文件指针将会放在文件的开头。
# w+	打开一个文件用于读写。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。
# a+	打开一个文件用于读写。如果该文件已存在，文件指针将会放在文件的结尾。文件打开时会是追加模式。如果该文件不存在，创建新文件用于读写。
# rb+	以二进制格式打开一个文件用于读写。文件指针将会放在文件的开头。
# wb+	以二进制格式打开一个文件用于读写。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。
# ab+	以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。如果该文件不存在，创建新文件用于读写。

# with as with 控制模块结束时 文件会自动关闭
# python将结果保存为TXT文件的方法 简单易用，操作高效，是一种最基本的保存数据方法。
with open('文件名.txt','a',encoding='utf-8') as file:
	file.write('要存储的文件内容')
